/*
 * SPDX-License-Identifier: (GNU General Public License v3.0 only)
 * Copyright Â© 2024 Alexandre GARCIN
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the
 * GNU General Public License as published by the Free Software Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program. If
 * not, see <https://www.gnu.org/licenses/>.
 */

import { MapMenu, Menu } from "@pages/Map/MapMenu/MapMenu";
import { OlOSMLayer } from "@Ol/layers/OlOSMLayer";
import { OlRouteLayer } from "@Ol/layers/OlRoute";
import { OlWMTSLayer } from "@Ol/layers/OlWMTSLayer";
import { OlMap } from "@Ol/OlMap";
import { getTopLeft, getWidth } from 'ol/extent';
import { fromLonLat, get as getProjection } from 'ol/proj';
import { Dispatch, KeyboardEvent, SetStateAction, useCallback, useContext, useEffect, useMemo, useState } from "react";

import { OnLayerChange } from './MapMenu/Menus/Layers';
import { GlobalSettings } from "@Settings/Settings";
import { AZBALayer } from "@Ol/layers/AZBALayer";
import { SettingsContext, messageHandler } from "@Settings/SettingsProvider";
import { AirportsLayer } from "@Ol/layers/AirportsLayer";
import { PlaneLayer } from "@Ol/layers/PlaneLayer";
import { RecordsLayer } from "@Ol/layers/RecordsLayer";
import { OpenAip } from "@Ol/layers/OpenAip";
import { ToolBar } from "./Toolbar";
import { MapContext } from "./MapContext";

import flightPlanImg from '@efb-images/flight-plan.svg';
import recordImg from '@efb-images/record.svg';
import layersImg from '@efb-images/layers.svg';
import oaciImg from '@efb-images/oaci.jpg';
import azbaImg from '@efb-images/azba.jpg';
import airportsImg from '@efb-images/airports.jpg';
import planeImg from '@efb-images/plane.jpg';
import dsfImg from '@efb-images/dsf.jpg';
import openflightmapsImg from '@efb-images/openflightmaps.jpg';
import openAIPImg from '@efb-images/open_aip.jpg';
import openflightmapsBaseImg from '@efb-images/openflightmaps_base.jpg';
import map4freeImg from '@efb-images/map4free.jpg';
import bingImg from '@efb-images/bing.jpg';
import opentopoImg from '@efb-images/opentopo.jpg';
import ifrLowImg from '@efb-images/ifr_low.jpg';
import ifrHighImg from '@efb-images/ifr_high.jpg';
import sectionalImg from '@efb-images/sectional.jpg';
import osmImg from '@efb-images/osm.jpg';
import { Input } from "@alx-home/Utils";
import { Icaos, LatLon } from "@shared/Facilities";
import { RecordViewpoint } from "./RecordViewpoint";
import { ServerState } from "./ServerState";

const projection = getProjection('EPSG:3857')!;
const projectionExtent = projection.getExtent();
const size = projectionExtent ? getWidth(projectionExtent) / 256 : 1;
const resolutions = new Array(19);
const matrixIds = new Array(19);

for (let z = 0; z < 19; ++z) {
  // generate resolutions and matrixIds arrays for this WMTS
  resolutions[z] = size / Math.pow(2, Math.min(11, z + 6)) + (11 - z) * 0.0000000000001;
  matrixIds[z] = Math.min(11, z + 6);
}

const OverlayItem = ({ menu, setMenu, setOpen, image, alt, currentMenu }: {
  menu: Menu,
  setMenu: Dispatch<SetStateAction<Menu>>,
  setOpen: Dispatch<SetStateAction<boolean>>,
  image: string,
  alt: string,
  currentMenu: Menu
}) => {
  return <button className='p-2 w-full bg-overlay hocus:bg-highlight'
    onClick={() => {
      setOpen(open => menu !== currentMenu ? true : !open);
      setMenu(currentMenu);
    }}
    onMouseUp={e => e.currentTarget.blur()}>
    <img src={image} alt={alt} />
  </button>;
};

const Overlay = ({ menu, setMenu, setOpen }: {
  menu: Menu,
  setMenu: Dispatch<SetStateAction<Menu>>,
  setOpen: Dispatch<SetStateAction<boolean>>
}) => {
  return <div className='flex flex-col justify-end m-2 pointer-events-auto'>
    <div className="group flex flex-col shrink w-9 transition-all hover:w-20 [&_*]:transition-all">
      <OverlayItem menu={menu} setMenu={setMenu} setOpen={setOpen} currentMenu={Menu.records} alt='records' image={recordImg} />
      <OverlayItem menu={menu} setMenu={setMenu} setOpen={setOpen} currentMenu={Menu.nav} alt='flight plan' image={flightPlanImg} />
      <OverlayItem menu={menu} setMenu={setMenu} setOpen={setOpen} currentMenu={Menu.layers} alt='layers' image={layersImg} />
    </div>
  </div>;
};

const SpinAnimation = () => {
  const { triggerFlash, flash, flashKey } = useContext(MapContext)!;

  return <div className="absolute top-0 left-0 right-0 bottom-0 flex justify-center" >
    <span key={flashKey}
      className={"animate-ping-1 m-auto inline-flex aspect-square w-2/4 rounded-full bg-sky-400 opacity-75 justify-center"
        + (flash ? '' : ' hidden')}
      onAnimationEnd={() => triggerFlash(false)}
    >
      <h1 className="flex justify-center text-[2vw] m-auto">
        Start Drawing !
      </h1>
    </span>
  </div>;
}

const OACIBoundaries = [[-430238.11752151186, 6642123.685482322], [-389883.6964853683, 6643358.491022568], [-319230.03696249507, 6645466.263948025], [-197449.46163180465, 6647886.734341714], [-132591.15784436982, 6648166.289704094], [-39550.551584052846, 6648092.966879105], [55602.138382717516, 6647015.180643878], [166941.3940578537, 6644290.545377773], [288006.11943556456, 6639849.719795959], [382228.89893457456, 6641274.49761283], [470744.5190805885, 6641465.7003093725], [571486.3383089912, 6640977.474239895], [672566.256053328, 6639096.517961349], [748756.647604502, 6636856.466353371], [784428.1016173608, 6635852.9069511965], [865388.3944449641, 6632330.453057634], [937568.7185747456, 6628779.498923898], [898874.8375369421, 5869392.564614281], [881824.7296716573, 5870299.485245413], [876475.8807500215, 5725919.713240032], [861844.2279010892, 5727008.017997391], [857448.555674709, 5643527.164080664], [873836.9021945461, 5643801.433940186], [871179.6582790628, 5562625.829893081], [1001746.807191739, 5560588.349138281], [1057586.333727492, 5559146.782014351], [1134508.9611335627, 5556500.412502842], [1117920.4666418843, 5376472.797696554], [1099057.094597893, 5161004.592838535], [1085402.2278816353, 5002414.193325912], [384839.7596691013, 5002298.447136659], [384862.8509842946, 5143234.481764811], [330037.4331763477, 5143305.412690781], [326374.1276078542, 5208456.165904087], [288326.2299173883, 5207356.396504112], [213950.73313233297, 5204681.657673249], [166893.84752978187, 5202646.706421179], [145283.2274157692, 5201523.269440593], [144768.7330596557, 5212474.807665927], [119164.86249498789, 5212699.074226405], [67751.82931594951, 5212444.7982948115], [-52.997291390907776, 5211677.032701466], [-55759.25310876027, 5210620.8377614925], [-93862.57508467912, 5209721.086878415], [-136363.39522079818, 5208521.68453633], [-167142.38317630373, 5207685.258431856], [-225003.20718745416, 5205424.716774719], [-270343.96552372904, 5203478.459343167], [-291516.5958697789, 5202431.565060163], [-296582.8208178529, 5311891.907279465], [-324316.06193439936, 5883711.019638791], [-561711.7661548575, 5874422.370375842], [-586986.4671386455, 6339615.402381649], [-591943.0181610738, 6427719.401335435], [-594966.1543398899, 6476302.795402026], [-424368.0135648898, 6483321.81744408], [-427572.7546026764, 6563262.215645323], [-428526.6559546032, 6593666.293619203], [-430238.11752151186, 6642123.685482322]];
const OPENFLightsBoundaries = [[-545822.3693499268, 6350651.923376388], [-469001.8324539542, 5523065.196164073], [-445532.5005241772, 5517922.64506141], [-198535.74623494837, 5401227.114763789], [-198508.96519961214, 5365594.024895453], [-196485.91320073855, 5364597.721520415], [-194825.198873305, 5364295.811406767], [-193436.23779945145, 5363601.418145376], [-192198.25075536463, 5358016.08104289], [-188617.72911566714, 5359571.485308666], [-182276.81986546627, 5359782.822388219], [-181310.5860749595, 5358605.372944992], [-181310.58607495943, 5354288.058319828], [-179982.01461301258, 5351510.485274267], [-176268.05348075207, 5351057.620103795], [-173671.30016876507, 5353714.429103897], [-172131.36506514484, 5356371.238103998], [-166998.2480530775, 5356431.620126728], [-163163.50769700363, 5353050.226853872], [-160195.37896788804, 5353452.931681384], [-156843.7555070676, 5353422.74067002], [-154971.67753796067, 5351520.706954038], [-154367.78141889392, 5349799.819306245], [-154669.72947842733, 5342342.639499142], [-156551.65593537636, 5339536.173963864], [-157850.03259136988, 5332531.859327234], [-159540.94172475676, 5329965.623361228], [-164070.16261775736, 5326886.14020202], [-162349.05867841715, 5322508.443554126], [-157880.2273973232, 5319066.668258539], [-153864.3182055293, 5318160.937917597], [-151116.5908637756, 5317496.7356675705], [-150088.9230737622, 5318612.84145566], [-148519.8375517886, 5326433.275031548], [-147070.4868660284, 5329391.994145297], [-142902.32612577686, 5330723.259406215], [-143928.94952819034, 5329243.899849339], [-143687.39108056363, 5327794.73130383], [-145227.32618418385, 5323779.326792313], [-138010.7675613362, 5320246.978462633], [-135263.0402195825, 5321031.944758117], [-134039.18812942202, 5319029.650162305], [-128810.73141460674, 5317160.326690198], [-126878.26383359314, 5314201.6075764485], [-123224.6923132393, 5315952.686235607], [-118755.86103214536, 5312178.809815008], [-112384.75697599116, 5311303.270485431], [-107795.14647108388, 5307408.630019373], [-101937.35411613641, 5305778.315405674], [-90795.4707193549, 5306170.7985534165], [-87140.10360433311, 5307641.263830692], [-85328.41524713287, 5307762.027876151], [-83456.33727802595, 5306101.522251087], [-79591.40211599876, 5295987.533443884], [-76357.14569246321, 5295338.151839343], [-68355.52211482878, 5287096.005736756], [-67177.9246826486, 5284469.38774802], [-64581.171370661585, 5283865.567520724], [-63403.57393848142, 5280816.2753728805], [-60686.041402681054, 5280695.511327421], [-59297.080328827535, 5281510.66863427], [-56911.69065851387, 5286009.129327623], [-55160.3919132203, 5286160.084384448], [-51687.98922858649, 5284922.252918491], [-50238.6385428263, 5282446.589986579], [-45014.937112898915, 5282929.646168416], [-39761.0408770182, 5286612.94955492], [-32212.339388683835, 5288756.511361821], [-27200.001600429823, 5285918.55629353], [-20949.676768088968, 5280876.6573956115], [-18896.429963262024, 5280967.230429705], [-16511.040292948364, 5283020.219202511], [-15665.585726254914, 5282054.106838838], [-11728.609450266315, 5271902.285436418], [-10913.349689526203, 5271147.510152299], [-7440.947004892394, 5266498.094402121], [-182.37120212453738, 5265776.131289928], [2927.6938110692245, 5267497.018937721], [4285.465723796668, 5267255.490846805], [8180.595691777202, 5268402.749278667], [12105.920465711071, 5267527.209949088], [14430.920524118057, 5267738.547028641], [18597.803745678615, 5271361.468392416], [21345.531087432322, 5272116.243676536], [25367.012406279828, 5269637.740214488], [29050.778732586994, 5268248.953691708], [32160.84374578075, 5263025.9087256], [34848.18147562779, 5263992.021089273], [39347.20756267506, 5269698.122237218], [41309.869949642, 5270000.032350863], [45144.61030571586, 5266497.875032548], [47741.36361770288, 5266135.58289617], [64771.234175385194, 5266437.493009819], [71927.51731451094, 5265857.081861309], [75128.16674556471, 5264770.205452177], [72863.55629906441, 5275427.632463947], [73165.50435859778, 5276793.429501009], [71897.32250855761, 5279480.429512475], [73974.01798138602, 5283004.519088799], [74185.38162305938, 5288106.800009448], [78340.12785652978, 5292031.536231571], [98419.67381549919, 5283940.345185808], [104096.29733472664, 5280830.671015235], [106391.10258718027, 5282672.3227084875], [108293.37536224052, 5282189.266526651], [108746.29745154058, 5280589.142924317], [112430.06377784775, 5279683.4125833735], [116778.11583512835, 5279441.884492455], [122303.7653245891, 5278234.244037865], [126041.85690252094, 5272268.522766317], [129151.9219157147, 5268464.455334353], [131054.19469077497, 5268222.927243436], [136791.20782190908, 5270245.725004876], [139599.32477556946, 5269370.185675297], [148718.15617347736, 5269823.050845769], [151194.130261651, 5269068.275561654], [151526.27312713774, 5267468.15195932], [154636.3381403315, 5264992.489027407], [160528.60918214096, 5252351.229564163], [196490.62307256585, 5234810.251961222], [205255.42277547633, 5233519.835701152], [210871.6566827971, 5229111.948041893], [214434.64378529091, 5229595.0042237295], [216759.65204099813, 5226938.184295267], [219567.7689946585, 5217790.307851736], [223795.04182812574, 5215495.790988013], [226482.37955797277, 5215103.307840271], [230317.11991404663, 5215767.510090296], [234785.95119514057, 5218997.948306329], [239375.56170004787, 5225217.296647474], [245473.48561506273, 5224213.218112939], [247979.65450918974, 5225692.577669813], [251633.22602954358, 5226598.308010757], [259903.78456193334, 5224117.464696256], [269212.9071414955, 5220300.8117222935], [272464.82383852167, 5216630.093877788], [278232.0317756091, 5212916.599479918], [280798.59028164286, 5212675.071389], [285358.00598059676, 5214788.442184536], [290098.5905152708, 5214184.62195724], [295986.57767617155, 5212735.45341173], [297949.2400631385, 5213248.700604931], [298009.62967504514, 5214214.812968604], [295745.01922854484, 5216781.0489346115], [295805.4088404515, 5219769.9590597255], [298769.1200183742, 5222534.746406538], [304536.32795546163, 5224829.263270263], [308974.96443060227, 5223863.15090659], [311160.3072157829, 5223843.728949535], [312851.2163491697, 5226259.009858717], [317954.1385552838, 5230998.998642989], [319247.4493226822, 5231326.758123463], [322901.02084303607, 5230692.746884802], [325044.85206572304, 5230934.274975721], [327701.99498961674, 5232624.971612149], [329513.683346817, 5232413.634532596], [330177.9690777904, 5232141.915430312], [334042.9042398176, 5233319.364873539], [334918.55361246434, 5232775.926668973], [337122.774447058, 5234074.140157659], [338089.0082375648, 5233742.039032646], [339266.60566974495, 5230511.600816614], [340858.4096567255, 5229176.261483407], [341341.5265519789, 5227938.43001745], [342700.2928198791, 5226942.1266424125], [344602.5655949393, 5226821.362596953], [345961.3318628395, 5228059.194062909], [351849.31902374025, 5227757.283949259], [352604.1891725737, 5226126.969335561], [521979.82177785056, 5162811.862891496], [523251.0083602164, 4723500.493542739], [893514.9948020887, 4723637.505817936], [1284177.489113784, 4510938.257819259], [1285441.3958199767, 4191210.0465241065], [2323384.613845139, 4082840.257173095], [2629105.834093814, 4072552.8552436517], [2685142.7480311827, 4040172.255164801], [3034958.3750464935, 4035763.3686236115], [3334800.3410596168, 3971099.699352828], [3331860.713941841, 4290009.159165557], [3118737.747903101, 4361286.158248125], [3037898.002164269, 4380391.333259948], [3019235.5963497614, 4437379.63606982], [2996487.056351398, 4522530.134860653], [3013402.6373758223, 4560439.603500408], [2944573.7214833386, 4582018.839495345], [2917738.8170291926, 4601608.161658589], [2910358.8419937156, 4616201.711844693], [2916840.3136416385, 4638884.011764053], [2929108.8135466357, 4651382.421923701], [2917158.814305824, 4668335.783475094], [2921006.973986732, 4692812.337082531], [2957349.511441157, 4690034.91260261], [2968443.6098143808, 4711721.22490273], [2955249.1853882517, 4752688.235981574], [2946221.4213072164, 4762872.125741287], [2944138.0911346697, 4778379.412420849], [2891823.3556907196, 4776064.892020915], [2836839.488077084, 4890633.65181768], [2893872.811535619, 4942249.1671920195], [2883919.1229334516, 4953127.4130717125], [2888085.783278545, 4969329.055871255], [2930215.3489900446, 5006129.930230216], [2926280.1697752345, 5028062.875525041], [2929289.424468913, 5050282.271364413], [2952437.5374972094, 5064169.393764022], [2961002.339317679, 5076899.255963663], [2957761.6034937175, 5100970.268122983], [2928594.981078064, 5119949.335402448], [2935437.327965142, 5136736.539054939], [2963446.544729381, 5159418.838974299], [3013473.193569853, 5176559.650604242], [3035463.900946735, 5178874.171004177], [3050278.6932848445, 5169847.541444432], [3067176.8157955008, 5152488.638444921], [3103519.353249926, 5163829.788404602], [3152341.432989068, 5159895.103724713], [3226878.3569401824, 5180031.431204145], [3419628.2191577824, 5282418.191843154], [3383332.690568429, 5502710.730321142], [3335575.4161087526, 5644054.4977838965], [3299966.685692243, 5653743.845185116], [3293599.0490976195, 5681121.241585559], [3268765.266378588, 5689398.128869414], [3223555.0465567615, 5662020.732468971], [3197447.7365188054, 5655653.896096775], [3148416.934740205, 5673481.0379389245], [3139502.243507732, 5702768.485251026], [3171977.1901403116, 5737786.085298105], [3195672.195364575, 5750660.6544015035], [3203815.373113429, 5777897.154442942], [3225600.087359305, 5785041.570811363], [3227477.8755795476, 5790964.662100079], [3223078.0585509706, 5799664.404532596], [3232751.302795749, 5812644.166355462], [3221245.643414946, 5825466.570943108], [3226039.668156947, 5833615.388811891], [3220489.8752929084, 5853830.938123845], [3228291.037504732, 5859568.261955017], [3234991.800137462, 5864496.3026874], [3247456.264466665, 5865215.316028764], [3246857.0113739152, 5869529.396076943], [3256205.3596208175, 5870008.738304518], [3280535.0351864737, 5861021.071537478], [3285688.6117841257, 5855268.964806569], [3296115.6155979782, 5839330.835739683], [3302707.39961823, 5840049.849081046], [3301628.7440512795, 5849996.200303238], [3311696.1960094823, 5857306.169273765], [3318168.129411184, 5853711.102566948], [3323441.5566273853, 5843884.586901651], [3334827.3653896386, 5846281.298039528], [3340580.19508004, 5842925.902446499], [3347771.2321930416, 5849157.351404981], [3339022.1370388893, 5854430.115908312], [3331711.2493073377, 5861260.742651263], [3327636.3282766365, 5867971.53383732], [3335786.170338039, 5873843.47612512], [3333029.6061113877, 5885467.525143826], [3335786.170338039, 5890860.12520405], [3336864.8259049887, 5903682.529791695], [3323321.706008835, 5920579.343313732], [3311881.9425442014, 5918912.419032654], [3308699.9305457314, 5928728.161182515], [3299830.9847730286, 5928488.490068727], [3298992.0304431785, 5931963.721218649], [3293838.4538455275, 5930885.201206605], [3290242.9352890267, 5934360.432356528], [3297433.9232717296, 5941814.444703536], [3296355.2677047793, 5954037.671506712], [3288693.3833124773, 5958000.217121251], [3287905.6148353913, 5964824.88005526], [3291384.0989537146, 5968738.275557403], [3290961.9898700276, 5986992.449652528], [3295176.2744590594, 5989678.503058265], [3292419.7102324087, 6003339.756544167], [3285348.523737957, 6001542.223190759], [3285228.6731194067, 5998306.663154624], [3283790.4656968066, 5993393.405321975], [3277559.852610284, 5991039.449353634], [3271249.195037309, 5992945.058049967], [3269887.793945003, 6004657.947670001], [3264374.6654917016, 6015203.4766766615], [3258427.14799151, 6014151.529695983], [3247236.027039047, 6019757.227838629], [3248174.3260954893, 6028207.226766132], [3242661.197642188, 6030963.444574691], [3243500.151972038, 6035876.70240734], [3251290.44217779, 6042227.986922716], [3255605.064445592, 6049389.923734726], [3255964.6163012423, 6064609.039460249], [3259080.732383543, 6074076.048454866], [3251215.576983646, 6072542.690615474], [3256923.4212496425, 6088815.821952813], [3247209.846022189, 6106685.505959267], [3239419.555816437, 6099135.865874953], [3213891.3740652804, 6108003.697085099], [3211494.36169428, 6113755.803816006], [3212093.61478703, 6125859.195062288], [3178655.2922115712, 6133169.164032814], [3173981.11808812, 6116871.528295247], [3169187.0933461194, 6118189.719421079], [3165471.7241710685, 6120826.101672745], [3164153.367367018, 6128495.577313953], [3165232.0229339683, 6133888.177374178], [3161756.354996017, 6134966.697386223], [3158520.3882951667, 6132809.657362133], [3157801.284583866, 6130173.275110467], [3153366.811697515, 6127656.728415696], [3151569.052419265, 6129813.768439786], [3150969.7993265144, 6134008.012931071], [3156842.479635466, 6139280.777434402], [3156243.226542716, 6146590.746404929], [3151569.052419265, 6144074.199710158], [3141022.1979868617, 6140119.626332659], [3125511.067225256, 6146870.758169323], [3125440.8368864143, 6158246.643271767], [3109358.0892916718, 6161757.718920669], [3094820.363959955, 6179523.795593469], [3090466.0829517716, 6182964.649729393], [3078526.925348687, 6181068.6688789865], [3072201.9753978974, 6184649.966040866], [3072693.587769789, 6188090.8201767905], [3071078.2899764306, 6188582.370767636], [3068971.3798111803, 6185913.953274471], [3058507.0593237714, 6182051.770060678], [3058015.4469518797, 6178962.023489645], [3056123.447258194, 6176434.049022435], [3047972.5084975203, 6175380.726327764], [3044952.6039273283, 6181279.333417919], [3043126.615117445, 6181911.327034722], [3037859.3397043194, 6170675.884958236], [3032592.064291194, 6168569.239568894], [3027886.631588802, 6172431.422782687], [3022408.6651591514, 6170184.334367389], [3019076.8775217147, 6171415.47603948], [3018725.7258275063, 6173241.235376909], [3015565.360579631, 6175137.216227317], [3013879.8324474306, 6179701.61457089], [3010719.4671995556, 6180122.943648758], [3010017.163811139, 6178858.956415153], [3011421.7705879724, 6175277.659253273], [3011913.382959864, 6172258.134195217], [3009670.557436699, 6171415.47603948], [3007528.5321020284, 6169870.602753963], [3006123.925325195, 6167728.846608133], [3000891.7650814904, 6167623.514338666], [2995097.762127052, 6170537.707127254], [2992311.132400222, 6177875.120904499], [2987254.548003622, 6177313.348800674], [2983637.6855532755, 6177243.127287696], [2977527.64607405, 6177945.342417477], [2974902.8073396487, 6176644.37769256], [2974481.4253065987, 6175064.393650553], [2975394.4197115405, 6172466.197670366], [2982312.108087445, 6166040.929232875], [2985928.970537791, 6165092.938807671], [2986554.7643830115, 6158314.895949893], [2984974.581759074, 6155506.035430771], [2981743.986172357, 6155962.475265129], [2979566.845668265, 6157191.351742244], [2977740.8568583815, 6160070.433774344], [2975072.1039823983, 6161966.414624752], [2971946.8539039437, 6162773.962023999], [2970612.477465952, 6162001.52538124], [2970858.2836518977, 6159368.218644564], [2970191.0954329018, 6157753.123846069], [2967838.379081706, 6159508.66167052], [2967276.5363709726, 6158911.778810207], [2965788.2583030984, 6154321.493130078], [2963365.3116130605, 6150950.860507132], [2964032.4998320565, 6148422.886039921], [2963611.1177990064, 6146702.45897196], [2961679.7834808603, 6146878.012754405], [2960240.061534606, 6148071.778475031], [2958273.6120470394, 6145122.474929953], [2958343.842385881, 6143507.380131458], [2956307.1625594725, 6144069.152235283], [2953002.915613471, 6141955.246375022], [2946576.839609458, 6143219.233608628], [2943844.5854514153, 6139593.491135461], [2937813.0596089116, 6138161.644725957], [2936425.236230201, 6139708.816134855], [2934458.786742634, 6138760.825709651], [2933475.5619988507, 6137883.056797426], [2930841.924292288, 6137918.167553915], [2930174.736073292, 6136373.294268399], [2930771.693953446, 6133810.2090447], [2928025.451309911, 6126528.303412697], [2926234.5776694487, 6123824.775163043], [2925094.7781996354, 6119420.157838064], [2920923.8978830166, 6114775.663015718], [2918641.4118706607, 6110702.815262988], [2912109.9903583853, 6105155.315737723], [2904876.265457693, 6104417.989851453], [2902523.549106497, 6105225.537250701], [2897064.391851446, 6104384.446329196], [2875679.253674157, 6103928.006494839], [2870673.2747475603, 6102016.132981025], [2864710.1924010734, 6100641.816720183], [2853607.3024090338, 6100576.591964975], [2851254.586057838, 6098399.725062656], [2837238.447045828, 6097637.638851491], [2829477.9946038234, 6092195.471595692], [2823473.3006328605, 6090018.604693373], [2808921.070590136, 6087089.3784818705], [2808324.112709982, 6084315.628719238], [2801627.365643182, 6074514.802507279], [2799099.0734448815, 6069809.961137751], [2795798.247519323, 6066193.553219382], [2783121.671358401, 6061945.15168421], [2771375.147146027, 6061073.067905311], [2771234.6864683437, 6063320.156320608], [2767477.363340314, 6069183.652654275], [2763825.3857205473, 6075714.253361233], [2757623.9177518357, 6079165.041735193], [2755868.1592807937, 6079129.930978704], [2752216.181661027, 6080534.361238265], [2747443.1158557753, 6085237.581396946], [2741578.882562496, 6097842.342976505], [2735503.958252691, 6100475.649713181], [2729443.9551748354, 6099014.5309639], [2723599.9158190275, 6101388.529381895], [2718228.123877413, 6100086.012543971], [2714522.148707381, 6094923.327029007], [2708938.836769468, 6095028.659298474], [2698720.3224680047, 6090815.3685197905], [2695115.0003935727, 6092907.942938039], [2691865.7226871103, 6093475.681746702], [2690023.3008275516, 6092486.61386017], [2685896.1438855682, 6092633.023590965], [2679996.7954228674, 6098110.301603253], [2673781.4104353795, 6100322.279262061], [2668759.9412082, 6100884.051365885], [2660211.963630287, 6095884.92138446], [2657051.5983824115, 6096130.696679884], [2654698.882031216, 6098693.781903583], [2651854.553308128, 6103855.063107469], [2645680.9901959184, 6105911.6069210265], [2636761.737163026, 6104717.8412004], [2622504.9783781664, 6106473.379024851], [2617553.7394898287, 6103383.632453817], [2610565.8207750814, 6103945.404557641], [2576881.7419975493, 6108890.999637523], [2547513.8618851947, 6095156.136833177], [2514356.577887375, 6119310.550730475], [2463109.914329846, 6172036.205003376], [2465478.2917582616, 6205189.322117315], [2511898.4893552093, 6291861.042572327], [2527056.1048970693, 6304648.673459132], [2520464.915285978, 6374501.289805885], [2641252.1641351786, 6520848.621065989], [2673127.1906927307, 6528740.134744326], [2676777.8255614135, 6553528.122221158], [2665179.523949133, 6584941.069787413], [2667386.4132055957, 6604377.659952662], [2627597.6724082124, 6672578.358015622], [2617376.314557737, 6728426.704597534], [2617650.487208866, 6753566.686965388], [2629018.6988652614, 6816083.993523103], [2581651.150296948, 6835502.247832697], [2575967.0444687502, 6849710.726595813], [2590650.984524927, 6884758.307544835], [2611492.7058949857, 6908439.105483363], [2662175.982863081, 6925015.664040333], [2657016.8832845557, 6999672.836312956], [2630439.7253223103, 7080294.039094399], [2613257.3334895372, 7170495.333759681], [2559258.32812166, 7236327.952028789], [2381630.0209904835, 7226855.632853378], [2186475.720889031, 7253378.126544529], [1950638.1289758838, 7528965.126982457], [2205949.2157590943, 7760563.330821261], [2332430.3643589076, 8181945.136144095], [2764482.1625984088, 8376209.468585729], [2810428.684709673, 8380945.628173434], [2879585.3056194107, 8379524.780297123], [2953982.9966041767, 8431199.378996747], [3052981.1731119524, 8450617.63330634], [3076124.308511518, 8479562.557443066], [3089454.1855095536, 8522133.643080695], [3174911.4524282054, 8620402.58155979], [3187135.2818723647, 8618464.500859456], [3208592.8849943574, 8659133.502218436], [3245871.0420970735, 8686191.582963645], [3278678.296293929, 8739726.051215302], [3346463.94541503, 8817674.059891826], [3410410.135982253, 8907661.092058232], [3464882.8168358137, 8970178.398615945], [3511869.730515143, 9077317.105639802], [3365504.0054390533, 9239767.379498105], [3335188.774355333, 9292338.750921637], [3362188.2770392713, 9303231.91797336], [3375924.8661240824, 9329754.41166451], [3398880.833166874, 9380895.8340247], [3386091.5950534297, 9414048.951138638], [3349618.582655828, 9437729.749077165], [3334934.642599651, 9502141.519469965], [3349618.5826558284, 9515402.76631554], [3342987.1258562645, 9547608.65151194], [3307461.464430029, 9548555.88342948], [3297514.279230683, 9577446.456914485], [3296093.252773634, 9617703.813409982], [3295145.901802267, 9679868.943998354], [3319303.3515721066, 9758489.193154268], [3303672.0605445635, 9778381.063422631], [3349618.5826558275, 9797799.317732224], [3303680.3091805666, 9949699.39930318], [3275332.6077070767, 10026676.11366991], [3237014.752909045, 10097811.465982681], [3230151.6251838845, 10131227.714079866], [3231361.025405544, 10149196.800454289], [3330253.3338141656, 10313559.72200545], [3338783.8941471893, 10347307.414173316], [3304169.8586637704, 10383110.537134588], [3262394.2985975747, 10466651.157377552], [3181230.3533261097, 10500067.405474737], [3164520.1292996313, 10613443.961518759], [3200327.752213513, 10706532.081218062], [3172875.2413128708, 10706532.081218062], [3157358.604716855, 10723240.205266654], [3197429.6951788375, 10766118.015407415], [3205102.1019353643, 10827069.261854338], [3254039.1865843358, 10905836.132369133], [3239716.1374187833, 10958347.379378995], [3150197.080134079, 11009665.188956816], [3106034.3452069582, 11092012.371767737], [3017708.875352716, 11028760.187869493], [2961610.2661209684, 11045468.311918087], [2922221.8809156986, 10982216.128019843], [2872091.208836264, 10759043.328227922], [2854187.3973793234, 10707725.518650101], [2831509.2362005315, 10713692.705810314], [2806443.9001608146, 10685050.207441298], [2802863.137869426, 10636119.272727562], [2762281.1652336936, 10608670.211790588], [2678252.466132444, 10681708.654620867], [2647696.771909272, 10696984.581761722], [2636954.4850351075, 10667148.645960663], [2593985.3375384496, 10640893.022455731], [2481788.1190749537, 10659988.021368409], [2448367.6710219975, 10753076.141067712], [2397043.4115121, 10825875.824422294], [2364816.5508896066, 10830649.574150464], [2343331.9771412774, 10815134.887533912], [2357655.0263068303, 10786492.389164897], [2345719.152002203, 10757849.89079588], [2306330.766796933, 10782912.07686877], [2299169.242214157, 10763817.077956092], [2249038.5701347226, 10754269.578499753], [2272910.3187439768, 10683856.770009255], [2232328.3461082443, 10611057.086654672], [2263361.619300275, 10600316.149766292], [2222779.6466645426, 10548998.340188472], [2038967.182373283, 10589575.21287791], [2034192.8326514321, 10507228.03006699], [1987642.9228633859, 10435621.784144448], [1930350.726201175, 10453523.345625084], [1864703.4175257252, 10395044.91145501], [1830089.3820423062, 10307923.978915919], [1797862.5214198127, 10291215.854867326], [1831282.969472769, 10218416.171512742], [1826508.619750918, 10167098.361934923], [1739376.7373271391, 9960633.686191596], [1562654.8185493026, 9340888.07199156], [1449264.0126553439, 9350435.571447898], [1365712.8925229528, 9232285.265675703], [1349002.668496475, 9167839.64434542], [1370679.0462418378, 9101195.283677373], [1357357.7805097138, 9013886.215611955], [1377648.76682758, 8917217.783616526], [1360938.542801102, 8793100.290684123], [1438521.725781179, 8709559.670441158], [1418230.7394633128, 8627212.487630237], [1380035.9416885055, 8616471.550741855], [1420784.9339321132, 8514994.274191305], [1399300.360183784, 8406391.46787545], [1331265.876647409, 8308529.598447979], [1307394.1280381542, 8148608.982554305], [1268158.8238748603, 8155132.074968657], [1253682.6936673315, 8177251.480923321], [1195196.9095746581, 8148608.982554305], [1181237.3583123977, 8068546.661660984], [836290.5909086703, 7751092.304737722], [561765.4819022438, 7754672.617033849], [567839.983445487, 7365754.082186654], [224993.82775538258, 6710086.188364339], [224241.91479111766, 6640542.979780068], [164088.87764992082, 6619867.971822581], [167512.38350458257, 6561547.316171453], [-27609.03072217456, 6442384.088489215], [-221602.57550253437, 6442384.088489215], [-545822.3693499268, 6350651.923376388]];

const openFlightMapUrl = (() => {
  const now = new Date()
  const res = ((now.getFullYear() - 2000)).toFixed(0) + (now.getMonth() < 10 ? '0' + (now.getMonth() + 1).toFixed(0) : (now.getMonth() + 1).toFixed(0))
  return "https://nwy-tiles-api.prod.newaydata.com/tiles/{z}/{x}/{y}.png?path=" + res
})()

export const MapPage = ({ active }: {
  active: boolean
}) => {
  const { map } = useContext(MapContext)!;
  const settings = useContext(SettingsContext)!;
  const [opacity, setOpacity] = useState(' opacity-0');
  const [open, setOpen] = useState(false);
  const [menu, setMenu] = useState<Menu>(Menu.layers);

  const [layers, setLayers] = useState([
    {
      olLayer: <PlaneLayer key="plane" />,
      src: planeImg,
      alt: 'plane layer',
      getSettings: (_settings: GlobalSettings) => _settings.plane,
    },
    {
      olLayer: <AirportsLayer key="airports" />,
      src: airportsImg,
      alt: 'airports layer',
      getSettings: (_settings: GlobalSettings) => _settings.airports,
    },
    {
      olLayer: <AZBALayer key="azba" />,
      src: azbaImg,
      alt: 'azba layer',
      getSettings: (_settings: GlobalSettings) => _settings.azba,
    },
    {
      olLayer: <OlWMTSLayer key="wmts"
        opacity={1.0}
        url={'https://data.geopf.fr/private/wmts?apikey=ign_scan_ws'}
        layer={'GEOGRAPHICALGRIDSYSTEMS.MAPS.SCAN-OACI'}
        version={'1.0.0'}
        projection={projection}
        clipAera={OACIBoundaries}
        tileGrid={{
          origin: getTopLeft(projectionExtent),
          resolutions: resolutions,
          matrixIds: matrixIds,
          extent: [...fromLonLat([-5.99644, 40.3893]), ...fromLonLat([11.146, 51.4441])]
        }}
      />,
      src: oaciImg,
      alt: 'oaci layer',
      getSettings: (_settings: GlobalSettings) => _settings.OACI,
    },
    {
      olLayer: <OlOSMLayer key="dsf" url="https://secais.dfs.de/static-maps/icao500/tiles/{z}/{x}/{y}.png" crossOrigin={null} />,
      src: dsfImg,
      alt: 'dsf layer',
      getSettings: (_settings: GlobalSettings) => _settings.germany
    },
    {
      olLayer: <OpenAip key="openaip" url="https://api.tiles.openaip.net/api/data/openaip/{z}/{x}/{y}.pbf" crossOrigin={null} />,
      src: openAIPImg,
      alt: 'openaip layer',
      getSettings: (_settings: GlobalSettings) => _settings.openaipmaps
    },
    {
      olLayer: <OlOSMLayer key="openflightmaps" url={`${openFlightMapUrl}/aero/latest`} crossOrigin={null} />,
      src: openflightmapsImg,
      alt: 'openflightmaps layer',
      getSettings: (_settings: GlobalSettings) => _settings.openflightmaps
    },
    {
      olLayer: <OlOSMLayer key="openflightmapsBase" url={`${openFlightMapUrl.replace('png', 'jpg')}/base/latest`} crossOrigin={null} clipAera={OPENFLightsBoundaries} />,
      src: openflightmapsBaseImg,
      alt: 'openflightmaps base layer',
      getSettings: (_settings: GlobalSettings) => _settings.openflightmapsBase
    },
    {
      olLayer: <OlOSMLayer key="sectional" url="https://maps.iflightplanner.com/Maps/Tiles/Sectional/Z{z}/{y}/{x}.png" crossOrigin={null} />,
      src: sectionalImg,
      alt: 'sectional layer',
      getSettings: (_settings: GlobalSettings) => _settings.USSectional
    },
    {
      olLayer: <OlOSMLayer key="map-for-free" url="https://maps-for-free.com/layer/relief/z{z}/row{y}/{z}_{x}-{y}.jpg" crossOrigin={null} />,
      src: map4freeImg,
      alt: 'map for free layer',
      getSettings: (_settings: GlobalSettings) => _settings.mapforfree
    },
    {
      olLayer: <OlOSMLayer key="google" url="https://mt1.google.com/vt/lyrs=y&x={x}&y={y}&z={z}" crossOrigin={null} />,
      src: bingImg,
      alt: 'google layer',
      getSettings: (_settings: GlobalSettings) => _settings.googlemap
    },
    {
      olLayer: <OlOSMLayer key="open-topo" url="https://tile.opentopomap.org/{z}/{x}/{y}.png" crossOrigin={null} />,
      src: opentopoImg,
      alt: 'open topo layer',
      getSettings: (_settings: GlobalSettings) => _settings.opentopo
    },
    {
      olLayer: <OlOSMLayer key="ifr low" url="https://maps.iflightplanner.com/Maps/Tiles/IFRLow/Z{z}/{y}/{x}.png" crossOrigin={null} />,
      src: ifrLowImg,
      alt: 'ifr low layer',
      getSettings: (_settings: GlobalSettings) => _settings.USIFRLow,
    },
    {
      olLayer: <OlOSMLayer key="ifr high" url="https://maps.iflightplanner.com/Maps/Tiles/IFRHigh/Z{z}/{y}/{x}.png" crossOrigin={null} />,
      src: ifrHighImg,
      alt: 'ifr high layer',
      getSettings: (_settings: GlobalSettings) => _settings.USIFRHigh,
    },
    {
      olLayer: <OlOSMLayer key="osm" />,
      src: osmImg,
      alt: 'osm layer',
      getSettings: (_settings: GlobalSettings) => _settings.openstreet,
    },
    // {
    //    olLayer: <OlBingLayer key="bing" />,
    //    src: bingImg,
    //    alt: 'bing layer'
    // }
  ].map((elem, index) => ({
    ...elem,
    order: index
  })));

  const [icaos, setIcaos] = useState<string[]>([]);
  const [suggestIndex, setSuggestIndex] = useState(0);

  const onLayerChange = useCallback<OnLayerChange>((values) =>
    setLayers(layers => {
      const newLayers = [...layers];

      values.forEach(elem => {
        if (elem.order !== undefined) {
          newLayers[elem.index].order = elem.order;
        }
      });

      return newLayers;
    }), []);

  const olLayers = useMemo(() =>
    layers.map(layer => {
      const layerSettings = layer.getSettings(settings);
      return { ...layer.olLayer, props: { ...layer.olLayer.props, order: layers.length - 1 - layer.order, active: layerSettings.active, enabled: layerSettings.enabled, minZoom: layerSettings.minZoom, maxZoom: layerSettings.maxZoom } }
    }),
    [layers, settings]);

  const [icao, setIcao] = useState("");
  const [refreshIcao, setRefreshIcao] = useState(false);
  const updateIcao = useCallback((icao?: string) => {
    if (icao) {
      setIcao(icao);
      setSuggestIndex(0);
      setRefreshIcao(true);
    }
  }, [])
  const searchIcao = useCallback((icao: string) => {
    updateIcao(icao);

    messageHandler.send({
      __GET_ICAOS__: true,
      icao: icao.toUpperCase()
    });
  }, [updateIcao]);


  const filteredIcaos = useMemo(() => icaos.filter(value => value !== icao.toUpperCase()), [icao, icaos]);
  const icaoValid = useMemo(() => filteredIcaos.length !== icaos.length, [filteredIcaos, icaos]);

  const onIcaoSearchKeyDown = useCallback((event: KeyboardEvent<HTMLInputElement>) => {
    if (event.key === 'ArrowDown') {
      setSuggestIndex(index => (index + 1) % filteredIcaos.length)
    } else if (event.key === 'ArrowUp') {
      setSuggestIndex(index => index === 0 ? filteredIcaos.length - 1 : (index - 1))
    } else if (event.key === 'Enter' || event.key === 'Tab') {
      updateIcao(filteredIcaos[suggestIndex])
    }
  }, [filteredIcaos, suggestIndex, updateIcao]);

  useEffect(() => {
    if (active) {
      setOpacity(' opacity-100');
    } else {
      setOpacity(' opacity-0');
    }
  }, [active]);

  useEffect(() => {
    const callback = (message: Icaos) => {
      setIcaos(message.icaos.map(value => value.toUpperCase()));
    }

    messageHandler.subscribe('__ICAOS__', callback);
    return () => messageHandler.unsubscribe('__ICAOS__', callback);
  }, [icao, icaos]);

  useEffect(() => {
    const callback = (message: LatLon) => {
      map.getView().animate({ center: fromLonLat([message.lon, message.lat]) })
    }

    messageHandler.subscribe('__LAT_LON__', callback);
    return () => messageHandler.unsubscribe('__LAT_LON__', callback);
  }, [map]);

  useEffect(() => {
    if (refreshIcao) {
      setRefreshIcao(false);
    }
  }, [refreshIcao])

  useEffect(() => {
    if (icaoValid) {
      messageHandler.send({
        __GET_LAT_LON__: true,
        icao: icao.toUpperCase()
      });
    }
  }, [icao, icaoValid])

  return <div className={'z-0 transition transition-std relative grow h-full' + opacity} style={active ? {} : { display: 'none' }}>
    <OlMap id='map' className='absolute w-full h-full top-0 left-0'>
      {olLayers}
      <OlRouteLayer
        zIndex={layers.length}
        order={layers.length} />
      <RecordsLayer key="records" order={layers.length + 1} active={true} />
    </OlMap>
    <div className="absolute z-10 pointer-events-none flex grow justify-end w-full h-full top-0 left-0">
      <div className="flex flex-col-reverse grow transition-all">
        <ToolBar menu={menu} />
        <div className="relative flex flex-row h-full grow transition-all overflow-hidden">
          <div className={"relative flex grow justify-end h-full overflow-hidden"} >
            <SpinAnimation />
            <div className={"absolute transition-all right-0 top-0 m-5 max-w-20 text-base pointer-events-auto"
              + " [&_*]:uppercase p-2 rounded-md opacity-40 bg-slate-800 overflow-hidden hocus-within:overflow-visible "
              + " hocus-within:max-w-80 hocus-within:opacity-100 [&:focus-within_.suggests]:max-h-[8000px] [&:focus-within_.suggests]:opacity-100 [&:hover_.hide]:opacity-100 [&:focus-within_.hide]:opacity-100"
            }>
              <div className="relative flex flex-row grow">
                <div className="flex flex-col grow justify-center mr-4">ICAO: </div>
                <div className="hide flex flex-col w-full opacity-0">
                  <div className="flex flex-row w-32 overflow-hidden">
                    <Input active={true} inputMode="text" onChange={searchIcao}
                      onKeyDown={onIcaoSearchKeyDown} value={icao}
                      reload={refreshIcao} className={(icaoValid ? '' : ' !text-red-500')}
                    />
                  </div>
                  <div className={"flex relative w-full"
                    + (filteredIcaos.length ? '' : ' hidden')
                  }>
                    <div className="transition-all suggests flex absolute flex-col left-0 right-0 max-h-0 overflow-hidden hocus-within:overflow-visible opacity-0">
                      <div className="transition-all flex flex-col bg-gray-700 hocus:bg-gray-800 p-2 rounded-sm border-x-2 border-b-2 border-msfs ">
                        {filteredIcaos.map((icao, index) => <button key={icao} className={
                          "flex flex-row border-2 border-transparent hover:border-msfs p-2 cursor-pointer h-max"
                          + (suggestIndex === index ? ' border-msfs' : '')
                        }
                          // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events
                          onMouseOver={() => { setSuggestIndex(index) }}
                          onClick={() => {
                            if (filteredIcaos.length) {
                              updateIcao(filteredIcaos[suggestIndex]);
                            }
                          }}
                        >{icao}</button>)}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <Overlay menu={menu} setMenu={setMenu} setOpen={setOpen} />
            <ServerState />
            <RecordViewpoint menu={menu} />
          </div>
          <div className="flex flex-row pointer-events-auto">
            <MapMenu key={"map-menu"} open={open} setOpen={setOpen} menu={menu} layers={layers}
              onLayerChange={onLayerChange} />
          </div>
        </div>
      </div>
    </div>
  </div>;
}